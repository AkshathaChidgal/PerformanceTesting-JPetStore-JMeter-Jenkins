pipeline {
    agent any

    parameters {
        string(name: 'USERS', defaultValue: '50', description: 'Number of concurrent users')
        string(name: 'RAMPUP', defaultValue: '30', description: 'Ramp-up time (seconds)')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/AkshathaChidgal/PerformanceTesting-JPetStore-JMeter-Jenkins.git'
            }
        }

        stage('Run JMeter Tests') {
            steps {
                bat """
                    for /f %%i in ('powershell -Command "Get-Date -Format yyyyMMdd_HHmmss"') do set timestamp=%%i
                    set OUTPUT_DIR=report_%timestamp%

                    mkdir "03_TestResults\\%OUTPUT_DIR%"
                    mkdir "04_TestReports\\%OUTPUT_DIR%"

                    C:\\JMeter\\apache-jmeter-5.6.3\\apache-jmeter-5.6.3\\bin\\jmeter.bat ^
                    -n -t "01_TestPlans\\JPetStore_UltimateTG_16Users.jmx" ^
                    -l "03_TestResults\\%OUTPUT_DIR%\\LoadTestresult.csv" ^
                    -e -o "04_TestReports\\%OUTPUT_DIR%" ^
                    -Jjmeter.save.saveservice.output_format=csv ^
                    -Jusers=${params.USERS} -Jrampup=${params.RAMPUP}
                """
            }
        }

stage('Publish Report') {
    steps {
        script {
            def latestReport = bat(
                script: 'for /f "delims=" %%i in (\'dir /b /ad-h /o-d 04_TestReports\') do (echo %%i & exit /b)',
                returnStdout: true
            ).trim()
            

            echo "Latest report folder: ${latestReport}"

            // Now point publishHTML to just that folder
            publishHTML(target: [
                allowMissing: false,
                keepAll: true,
                reportDir: "04_TestReports/${latestReport}",
                reportFiles: 'index.html',
                reportName: 'JMeter Performance Report'
            ])
        }
    }
}
    }
}
